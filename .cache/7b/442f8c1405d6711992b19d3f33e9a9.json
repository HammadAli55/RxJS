{"id":"index.js","dependencies":[{"name":"/Users/hammadshah/Developer/rxjs/package.json","includedInParent":true,"mtime":1668581806122},{"name":"rxjs","loc":{"line":1,"column":22,"index":22},"parent":"/Users/hammadshah/Developer/rxjs/src/index.js","resolved":"/Users/hammadshah/Developer/rxjs/node_modules/rxjs/dist/esm5/index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\n// Timer operator: After given duration, emit numbers in sequence every specified duration\n/*\n  timer takes a second argument, how often to emit subsequent values\n  in this case we will emit first value after 1 second and subsequent\n  values every 3 seconds after\n*/\nvar observable = (0, _rxjs.timer)(1000, 3000);\n\n// instance have function called subscribe\n// subscribe allow us to pass in an observer (as an object)\nvar subscription = observable.subscribe(console.log);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":4},"source":"index.js","original":{"line":9,"column":6},"name":"observable"},{"generated":{"line":10,"column":14},"source":"index.js","original":{"line":9,"column":16}},{"generated":{"line":10,"column":17},"source":"index.js","original":{"line":9,"column":19}},{"generated":{"line":10,"column":21},"source":"index.js","original":{"line":9,"column":19},"name":"timer"},{"generated":{"line":10,"column":32},"source":"index.js","original":{"line":9,"column":24}},{"generated":{"line":10,"column":34},"source":"index.js","original":{"line":9,"column":25}},{"generated":{"line":10,"column":38},"source":"index.js","original":{"line":9,"column":29}},{"generated":{"line":10,"column":40},"source":"index.js","original":{"line":9,"column":31}},{"generated":{"line":10,"column":44},"source":"index.js","original":{"line":9,"column":35}},{"generated":{"line":10,"column":45},"source":"index.js","original":{"line":9,"column":36}},{"generated":{"line":12,"column":0},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":13,"column":0},"source":"index.js","original":{"line":12,"column":0}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":4},"source":"index.js","original":{"line":13,"column":6},"name":"subscription"},{"generated":{"line":14,"column":16},"source":"index.js","original":{"line":13,"column":18}},{"generated":{"line":14,"column":19},"source":"index.js","original":{"line":13,"column":21},"name":"observable"},{"generated":{"line":14,"column":29},"source":"index.js","original":{"line":13,"column":31}},{"generated":{"line":14,"column":30},"source":"index.js","original":{"line":13,"column":32},"name":"subscribe"},{"generated":{"line":14,"column":39},"source":"index.js","original":{"line":13,"column":41}},{"generated":{"line":14,"column":40},"source":"index.js","original":{"line":14,"column":4},"name":"console"},{"generated":{"line":14,"column":47},"source":"index.js","original":{"line":14,"column":11}},{"generated":{"line":14,"column":48},"source":"index.js","original":{"line":14,"column":12},"name":"log"},{"generated":{"line":14,"column":51},"source":"index.js","original":{"line":14,"column":15}},{"generated":{"line":14,"column":52},"source":"index.js","original":{"line":15,"column":1}}],"sources":{"index.js":"import { timer } from 'rxjs'\n\n// Timer operator: After given duration, emit numbers in sequence every specified duration\n/*\n  timer takes a second argument, how often to emit subsequent values\n  in this case we will emit first value after 1 second and subsequent\n  values every 3 seconds after\n*/\nconst observable = timer(1000, 3000)\n \n// instance have function called subscribe\n// subscribe allow us to pass in an observer (as an object)\nconst subscription = observable.subscribe(\n    console.log\n)\n"},"lineCount":null}},"error":null,"hash":"6126094f863f8eb0bfa87760041460ea","cacheData":{"env":{}}}