{"id":"index.js","dependencies":[{"name":"/Users/hammadshah/Developer/rxjs/package.json","includedInParent":true,"mtime":1668581806122},{"name":"rxjs","loc":{"line":1,"column":27,"index":27},"parent":"/Users/hammadshah/Developer/rxjs/src/index.js","resolved":"/Users/hammadshah/Developer/rxjs/node_modules/rxjs/dist/esm5/index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\n// new instance of observable class\nvar observable = new _rxjs.Observable(function (subscriber) {\n  // emitting data to observers\n  subscriber.next('Hello World');\n  // after this we won't able to emit a new value\n  subscriber.error('Error!');\n  subscriber.next('Shah');\n  // prevent observable for pushing new data. This is a manual way to terminate obeservable\n  subscriber.complete();\n  subscriber.next('Shah');\n});\n\n// instance have function called subscribe\n// subscribe allow us to pass on observer (as an object)\nobservable.subscribe({\n  // observers can be partial, they are completely optional\n  // next responsible for handling data pushed from observable\n  // value refers to the data emitted by the observable\n  next: function next(value) {\n    console.log(value);\n  },\n  complete: function complete() {\n    console.log('complete called');\n  },\n  error: function error(err) {\n    console.error(err);\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":4},"source":"index.js","original":{"line":5,"column":6},"name":"observable"},{"generated":{"line":5,"column":14},"source":"index.js","original":{"line":5,"column":16}},{"generated":{"line":5,"column":17},"source":"index.js","original":{"line":5,"column":19}},{"generated":{"line":5,"column":21},"source":"index.js","original":{"line":5,"column":23},"name":"Observable"},{"generated":{"line":5,"column":37},"source":"index.js","original":{"line":5,"column":33}},{"generated":{"line":5,"column":38},"source":"index.js","original":{"line":5,"column":34}},{"generated":{"line":5,"column":48},"source":"index.js","original":{"line":5,"column":35},"name":"subscriber"},{"generated":{"line":5,"column":58},"source":"index.js","original":{"line":5,"column":45}},{"generated":{"line":5,"column":60},"source":"index.js","original":{"line":5,"column":50}},{"generated":{"line":6,"column":2},"source":"index.js","original":{"line":6,"column":4}},{"generated":{"line":7,"column":2},"source":"index.js","original":{"line":7,"column":4},"name":"subscriber"},{"generated":{"line":7,"column":12},"source":"index.js","original":{"line":7,"column":14}},{"generated":{"line":7,"column":13},"source":"index.js","original":{"line":7,"column":15},"name":"next"},{"generated":{"line":7,"column":17},"source":"index.js","original":{"line":7,"column":19}},{"generated":{"line":7,"column":18},"source":"index.js","original":{"line":7,"column":20}},{"generated":{"line":7,"column":31},"source":"index.js","original":{"line":7,"column":33}},{"generated":{"line":7,"column":32},"source":"index.js","original":{"line":7,"column":34}},{"generated":{"line":8,"column":2},"source":"index.js","original":{"line":8,"column":4}},{"generated":{"line":9,"column":2},"source":"index.js","original":{"line":9,"column":4},"name":"subscriber"},{"generated":{"line":9,"column":12},"source":"index.js","original":{"line":9,"column":14}},{"generated":{"line":9,"column":13},"source":"index.js","original":{"line":9,"column":15},"name":"error"},{"generated":{"line":9,"column":18},"source":"index.js","original":{"line":9,"column":20}},{"generated":{"line":9,"column":19},"source":"index.js","original":{"line":9,"column":21}},{"generated":{"line":9,"column":27},"source":"index.js","original":{"line":9,"column":29}},{"generated":{"line":9,"column":28},"source":"index.js","original":{"line":9,"column":30}},{"generated":{"line":10,"column":2},"source":"index.js","original":{"line":10,"column":4},"name":"subscriber"},{"generated":{"line":10,"column":12},"source":"index.js","original":{"line":10,"column":14}},{"generated":{"line":10,"column":13},"source":"index.js","original":{"line":10,"column":15},"name":"next"},{"generated":{"line":10,"column":17},"source":"index.js","original":{"line":10,"column":19}},{"generated":{"line":10,"column":18},"source":"index.js","original":{"line":10,"column":20}},{"generated":{"line":10,"column":24},"source":"index.js","original":{"line":10,"column":26}},{"generated":{"line":10,"column":25},"source":"index.js","original":{"line":10,"column":27}},{"generated":{"line":11,"column":2},"source":"index.js","original":{"line":11,"column":4}},{"generated":{"line":12,"column":2},"source":"index.js","original":{"line":12,"column":4},"name":"subscriber"},{"generated":{"line":12,"column":12},"source":"index.js","original":{"line":12,"column":14}},{"generated":{"line":12,"column":13},"source":"index.js","original":{"line":12,"column":15},"name":"complete"},{"generated":{"line":12,"column":21},"source":"index.js","original":{"line":12,"column":23}},{"generated":{"line":12,"column":23},"source":"index.js","original":{"line":12,"column":25}},{"generated":{"line":13,"column":2},"source":"index.js","original":{"line":13,"column":4},"name":"subscriber"},{"generated":{"line":13,"column":12},"source":"index.js","original":{"line":13,"column":14}},{"generated":{"line":13,"column":13},"source":"index.js","original":{"line":13,"column":15},"name":"next"},{"generated":{"line":13,"column":17},"source":"index.js","original":{"line":13,"column":19}},{"generated":{"line":13,"column":18},"source":"index.js","original":{"line":13,"column":20}},{"generated":{"line":13,"column":24},"source":"index.js","original":{"line":13,"column":26}},{"generated":{"line":13,"column":25},"source":"index.js","original":{"line":13,"column":27}},{"generated":{"line":14,"column":0},"source":"index.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":1},"source":"index.js","original":{"line":15,"column":1}},{"generated":{"line":14,"column":2},"source":"index.js","original":{"line":15,"column":2}},{"generated":{"line":16,"column":0},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":18,"column":0}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":19,"column":0},"name":"observable"},{"generated":{"line":18,"column":10},"source":"index.js","original":{"line":19,"column":10}},{"generated":{"line":18,"column":11},"source":"index.js","original":{"line":19,"column":11},"name":"subscribe"},{"generated":{"line":18,"column":20},"source":"index.js","original":{"line":19,"column":20}},{"generated":{"line":18,"column":21},"source":"index.js","original":{"line":20,"column":4}},{"generated":{"line":19,"column":2},"source":"index.js","original":{"line":21,"column":8}},{"generated":{"line":20,"column":2},"source":"index.js","original":{"line":22,"column":8}},{"generated":{"line":21,"column":2},"source":"index.js","original":{"line":23,"column":8}},{"generated":{"line":22,"column":2},"source":"index.js","original":{"line":24,"column":8},"name":"next"},{"generated":{"line":22,"column":6},"source":"index.js","original":{"line":24,"column":12}},{"generated":{"line":22,"column":8},"source":"index.js","original":{"line":24,"column":13}},{"generated":{"line":22,"column":22},"source":"index.js","original":{"line":24,"column":14},"name":"value"},{"generated":{"line":22,"column":27},"source":"index.js","original":{"line":24,"column":19}},{"generated":{"line":22,"column":29},"source":"index.js","original":{"line":24,"column":24}},{"generated":{"line":23,"column":4},"source":"index.js","original":{"line":25,"column":12},"name":"console"},{"generated":{"line":23,"column":11},"source":"index.js","original":{"line":25,"column":19}},{"generated":{"line":23,"column":12},"source":"index.js","original":{"line":25,"column":20},"name":"log"},{"generated":{"line":23,"column":15},"source":"index.js","original":{"line":25,"column":23}},{"generated":{"line":23,"column":16},"source":"index.js","original":{"line":25,"column":24},"name":"value"},{"generated":{"line":23,"column":21},"source":"index.js","original":{"line":25,"column":29}},{"generated":{"line":23,"column":22},"source":"index.js","original":{"line":25,"column":30}},{"generated":{"line":24,"column":2},"source":"index.js","original":{"line":26,"column":8}},{"generated":{"line":24,"column":3},"source":"index.js","original":{"line":26,"column":9}},{"generated":{"line":25,"column":2},"source":"index.js","original":{"line":27,"column":8},"name":"complete"},{"generated":{"line":25,"column":10},"source":"index.js","original":{"line":27,"column":16}},{"generated":{"line":25,"column":12},"source":"index.js","original":{"line":27,"column":18}},{"generated":{"line":25,"column":32},"source":"index.js","original":{"line":27,"column":24}},{"generated":{"line":26,"column":4},"source":"index.js","original":{"line":28,"column":12},"name":"console"},{"generated":{"line":26,"column":11},"source":"index.js","original":{"line":28,"column":19}},{"generated":{"line":26,"column":12},"source":"index.js","original":{"line":28,"column":20},"name":"log"},{"generated":{"line":26,"column":15},"source":"index.js","original":{"line":28,"column":23}},{"generated":{"line":26,"column":16},"source":"index.js","original":{"line":28,"column":24}},{"generated":{"line":26,"column":33},"source":"index.js","original":{"line":28,"column":41}},{"generated":{"line":26,"column":34},"source":"index.js","original":{"line":28,"column":42}},{"generated":{"line":27,"column":2},"source":"index.js","original":{"line":29,"column":8}},{"generated":{"line":27,"column":3},"source":"index.js","original":{"line":29,"column":9}},{"generated":{"line":28,"column":2},"source":"index.js","original":{"line":30,"column":8},"name":"error"},{"generated":{"line":28,"column":7},"source":"index.js","original":{"line":30,"column":13}},{"generated":{"line":28,"column":9},"source":"index.js","original":{"line":30,"column":15}},{"generated":{"line":28,"column":24},"source":"index.js","original":{"line":30,"column":16},"name":"err"},{"generated":{"line":28,"column":27},"source":"index.js","original":{"line":30,"column":19}},{"generated":{"line":28,"column":29},"source":"index.js","original":{"line":30,"column":24}},{"generated":{"line":29,"column":4},"source":"index.js","original":{"line":31,"column":12},"name":"console"},{"generated":{"line":29,"column":11},"source":"index.js","original":{"line":31,"column":19}},{"generated":{"line":29,"column":12},"source":"index.js","original":{"line":31,"column":20},"name":"error"},{"generated":{"line":29,"column":17},"source":"index.js","original":{"line":31,"column":25}},{"generated":{"line":29,"column":18},"source":"index.js","original":{"line":31,"column":26},"name":"err"},{"generated":{"line":29,"column":21},"source":"index.js","original":{"line":31,"column":29}},{"generated":{"line":29,"column":22},"source":"index.js","original":{"line":31,"column":30}},{"generated":{"line":30,"column":2},"source":"index.js","original":{"line":32,"column":8}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":33,"column":4}},{"generated":{"line":31,"column":1},"source":"index.js","original":{"line":33,"column":5}},{"generated":{"line":31,"column":2},"source":"index.js","original":{"line":34,"column":1}}],"sources":{"index.js":"import { Observable } from 'rxjs'\n\n\n// new instance of observable class\nconst observable = new Observable((subscriber) => {\n    // emitting data to observers\n    subscriber.next('Hello World')\n    // after this we won't able to emit a new value\n    subscriber.error('Error!')\n    subscriber.next('Shah')\n    // prevent observable for pushing new data. This is a manual way to terminate obeservable\n    subscriber.complete()\n    subscriber.next('Shah')\n\n})\n \n// instance have function called subscribe\n// subscribe allow us to pass on observer (as an object)\nobservable.subscribe(\n    {\n        // observers can be partial, they are completely optional\n        // next responsible for handling data pushed from observable\n        // value refers to the data emitted by the observable\n        next:(value) => {\n            console.log(value)\n        },\n        complete: () => {\n            console.log('complete called')\n        },\n        error: (err) => {\n            console.error(err)\n        }\n    }\n)\n\n"},"lineCount":null}},"error":null,"hash":"2e237e2ce198d8fe8df69b2427ea374a","cacheData":{"env":{}}}