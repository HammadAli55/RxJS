{"id":"index.js","dependencies":[{"name":"/Users/hammadshah/Developer/rxjs/package.json","includedInParent":true,"mtime":1668581806122},{"name":"rxjs","loc":{"line":1,"column":17,"index":17},"parent":"/Users/hammadshah/Developer/rxjs/src/index.js","resolved":"/Users/hammadshah/Developer/rxjs/node_modules/rxjs/dist/esm5/index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\n// flattering an array - used to reduce deeply nested array in to a simpler array\n\n// 'of' operator is synchronous, and complete the observable phase. \n// but can't flatter the array. To flatter the array, we use 'from' operator\n// loop run 5 times\nvar observable = (0, _rxjs.of)('https://jsonplaceholder.typicode.com/todos/1');\nobservable.subscribe({\n  next: function next(val) {\n    console.log(val);\n  },\n  complete: function complete() {\n    console.log('completed');\n  }\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":4},"source":"index.js","original":{"line":9,"column":6},"name":"observable"},{"generated":{"line":9,"column":14},"source":"index.js","original":{"line":9,"column":16}},{"generated":{"line":9,"column":17},"source":"index.js","original":{"line":9,"column":19}},{"generated":{"line":9,"column":21},"source":"index.js","original":{"line":9,"column":19},"name":"of"},{"generated":{"line":9,"column":29},"source":"index.js","original":{"line":9,"column":21}},{"generated":{"line":9,"column":31},"source":"index.js","original":{"line":9,"column":22}},{"generated":{"line":9,"column":77},"source":"index.js","original":{"line":9,"column":68}},{"generated":{"line":9,"column":78},"source":"index.js","original":{"line":9,"column":69}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":11,"column":0},"name":"observable"},{"generated":{"line":10,"column":10},"source":"index.js","original":{"line":11,"column":10}},{"generated":{"line":10,"column":11},"source":"index.js","original":{"line":11,"column":11},"name":"subscribe"},{"generated":{"line":10,"column":20},"source":"index.js","original":{"line":11,"column":20}},{"generated":{"line":10,"column":21},"source":"index.js","original":{"line":11,"column":21}},{"generated":{"line":11,"column":2},"source":"index.js","original":{"line":12,"column":2},"name":"next"},{"generated":{"line":11,"column":6},"source":"index.js","original":{"line":12,"column":6}},{"generated":{"line":11,"column":8},"source":"index.js","original":{"line":12,"column":8}},{"generated":{"line":11,"column":22},"source":"index.js","original":{"line":12,"column":9},"name":"val"},{"generated":{"line":11,"column":25},"source":"index.js","original":{"line":12,"column":12}},{"generated":{"line":11,"column":27},"source":"index.js","original":{"line":12,"column":17}},{"generated":{"line":12,"column":4},"source":"index.js","original":{"line":13,"column":4},"name":"console"},{"generated":{"line":12,"column":11},"source":"index.js","original":{"line":13,"column":11}},{"generated":{"line":12,"column":12},"source":"index.js","original":{"line":13,"column":12},"name":"log"},{"generated":{"line":12,"column":15},"source":"index.js","original":{"line":13,"column":15}},{"generated":{"line":12,"column":16},"source":"index.js","original":{"line":13,"column":16},"name":"val"},{"generated":{"line":12,"column":19},"source":"index.js","original":{"line":13,"column":19}},{"generated":{"line":12,"column":20},"source":"index.js","original":{"line":13,"column":20}},{"generated":{"line":13,"column":2},"source":"index.js","original":{"line":14,"column":2}},{"generated":{"line":13,"column":3},"source":"index.js","original":{"line":14,"column":3}},{"generated":{"line":14,"column":2},"source":"index.js","original":{"line":15,"column":2},"name":"complete"},{"generated":{"line":14,"column":10},"source":"index.js","original":{"line":15,"column":10}},{"generated":{"line":14,"column":12},"source":"index.js","original":{"line":15,"column":12}},{"generated":{"line":14,"column":32},"source":"index.js","original":{"line":15,"column":18}},{"generated":{"line":15,"column":4},"source":"index.js","original":{"line":16,"column":4},"name":"console"},{"generated":{"line":15,"column":11},"source":"index.js","original":{"line":16,"column":11}},{"generated":{"line":15,"column":12},"source":"index.js","original":{"line":16,"column":12},"name":"log"},{"generated":{"line":15,"column":15},"source":"index.js","original":{"line":16,"column":15}},{"generated":{"line":15,"column":16},"source":"index.js","original":{"line":16,"column":16}},{"generated":{"line":15,"column":27},"source":"index.js","original":{"line":16,"column":27}},{"generated":{"line":15,"column":28},"source":"index.js","original":{"line":16,"column":28}},{"generated":{"line":16,"column":2},"source":"index.js","original":{"line":17,"column":2}},{"generated":{"line":17,"column":0},"source":"index.js","original":{"line":18,"column":0}},{"generated":{"line":17,"column":1},"source":"index.js","original":{"line":18,"column":1}},{"generated":{"line":17,"column":2},"source":"index.js","original":{"line":19,"column":1}}],"sources":{"index.js":"import {of} from 'rxjs'\n\n// flattering an array - used to reduce deeply nested array in to a simpler array\n\n\n// 'of' operator is synchronous, and complete the observable phase. \n// but can't flatter the array. To flatter the array, we use 'from' operator\n// loop run 5 times\nconst observable = of('https://jsonplaceholder.typicode.com/todos/1')\n\nobservable.subscribe({\n  next: (val) => {\n    console.log(val)\n  },\n  complete: () => {\n    console.log('completed')\n  }\n}\n)"},"lineCount":null}},"error":null,"hash":"6d91031185a74f37c7f6a39bc55cb720","cacheData":{"env":{}}}